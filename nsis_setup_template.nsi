; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "App1"
!define PRODUCT_ALIAS_NAME "Test&App1"
!define PRODUCT_EXE_NAME "ExTcpClient"
!define PRODUCT_MAIN_EXE "${PRODUCT_EXE_NAME}.exe"
!define PRODUCT_INSTDIR_EXE "$INSTDIR\${PRODUCT_MAIN_EXE}"
!define PRODUCT_UNINSTALL_EXE "Uninstall.exe"
!define PRODUCT_VERSION "1.0.1"
!define PRODUCT_PUBLISHER "CompanyX"
!define PRODUCT_WEB_SITE "http://www.companyx.cn"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\${PRODUCT_MAIN_EXE}"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY HKLM
!define PRODUCT_CURRENT_USER_ROOT_KEY HKCU
!define PRODUCT_CURRENT_BOOT_DIR_KEY "Software\Microsoft\Windows\CurrentVersion\Run"
#app version
!define REG_TEST_REPORT_KEY "Software\CompanyX\TestReportClient\SoftInfo"
!define REG_SOFT_VERSION "Version"

#!define CONFIG_FILE_NAME		"AbsConfig.xml"
!define LICENSE_FILE_TEMP_DIR	"$TEMP\..\${PRODUCT_NAME}"


!define REG_STR_LANGUAGE		"Language"

;!define REQUIRED_SPACE		"100.0"

!define INSTALL_ICON      "Install.ico"

!define UNINSTALL_ICON    "Uninstall.ico"


!ifdef DEBUG

!define UI_PLUGIN_NAME         QTSetupPlugin_d

!define PACKAGE_PATH			Package\Debug

!define SYSTEM_DLL_PATH         SystemDll\Debug

!else

!define UI_PLUGIN_NAME         QTSetupPlugin

!define PACKAGE_PATH			Package\Release

!define SYSTEM_DLL_PATH         SystemDll\Release

!endif

!include "LogicLib.nsh"
!include "nsDialogs.nsh"

!ifdef DEBUG
Name "${PRODUCT_NAME} ${PRODUCT_VERSION}_Debug"
OutFile "${PRODUCT_NAME}Installer ${PRODUCT_VERSION}_Debug.exe"
!else
Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "${PRODUCT_NAME}Installer ${PRODUCT_VERSION}.exe"
!endif

# ICON
Icon              "${INSTALL_ICON}"
UninstallIcon     "${UNINSTALL_ICON}"

Unicode True
SetCompressor ZLIB

# UAC
# RequestExecutionLevel none|user|highest|admin
# RequestExecutionLevel admin

# Custom Install Page
Page custom PageAppInstall

# Custom Uninstall Page
UninstPage   custom     un.PageAppUnInstall
# UninstPage	instfiles


Function .onInit

	# makesure plugin directory exist

	InitPluginsDir

	SetOutPath "$PLUGINSDIR"
	
	File /r ${PACKAGE_PATH}\*.*
	
	File /r ${SYSTEM_DLL_PATH}\*.*
	
FunctionEnd

Function .onInstSuccess

	${UI_PLUGIN_NAME}::FinalCall
	RMDir /r /REBOOTOK "$PLUGINSDIR"
	
FunctionEnd

Function .onInstFailed

	${UI_PLUGIN_NAME}::FinalCall
	RMDir /r /REBOOTOK "$PLUGINSDIR"
	
FunctionEnd

Function .onUserAbort

	${UI_PLUGIN_NAME}::FinalCall
	RMDir /r /REBOOTOK "$PLUGINSDIR"
	
FunctionEnd

Section "MainSection" SEC01
  
SectionEnd

Function PageAppInstall

	GetFunctionAddress $0 OnStartExtractFiles

	${UI_PLUGIN_NAME}::BindEventToNsisFunc /NOUNLOAD "START_EXTRACT_FILES" $0

	GetFunctionAddress $0 OnUserCancelInstall

	${UI_PLUGIN_NAME}::BindEventToNsisFunc /NOUNLOAD "USER_CANCEL" $0
	
	GetFunctionAddress $0 OnBeforeFinished

	${UI_PLUGIN_NAME}::BindEventToNsisFunc /NOUNLOAD "BEFORE_FINISHED" $0
	
	;Initialize the name version and the path where the app is located
	${UI_PLUGIN_NAME}::InitSetupPluginHelper /NOUNLOAD ${PRODUCT_NAME} ${PRODUCT_VERSION} ${REQUIRED_SPACE} ${PRODUCT_EXE_NAME}	
	
	# ReadRegStr $0 ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "${REG_STR_LANGUAGE}"
	
	;Display the page, need to pass the $PLUGINSDIR parameter to the qt app path
	# ${UI_PLUGIN_NAME}::ShowInstallWindow /NOUNLOAD $PLUGINSDIR $0
	${UI_PLUGIN_NAME}::ShowInstallWindow /NOUNLOAD $PLUGINSDIR "-1"

FunctionEnd

Function OnStartExtractFiles

	${UI_PLUGIN_NAME}::GetInstallDirectory /NOUNLOAD

	Pop $0

	StrCmp $0 "" InstallAbort 0

    StrCpy $INSTDIR "$0"

	SetOutPath $INSTDIR
	
    GetFunctionAddress $0 onExtractFiles

    ${UI_PLUGIN_NAME}::NewThreadRun /NOUNLOAD $0
		
InstallAbort:


FunctionEnd


# !!! Don't Edit This Function !!!

# This Function Generated by Python Script(NsisScriptGenerate.py)

Function onExtractFiles
	
	Call onUnstallExistProduct
	
	Call OnAfterExtractFiles

FunctionEnd

Function OnAfterExtractFiles

	# Copy license files to install directory
	# CopyFiles /SILENT "${LICENSE_FILE_TEMP_DIR}\${CONFIG_FILE_NAME}" "$INSTDIR\${CONFIG_FILE_NAME}"
	
	${UI_PLUGIN_NAME}::NsisExtractFilesFinished /NOUNLOAD

	Call onCreateUninstall
	
FunctionEnd

Function OnUserCancelInstall
	Abort
FunctionEnd

Function OnBeforeFinished

  CreateDirectory "$SMPROGRAMS\${PRODUCT_NAME}"
  
  WriteINIStr "$INSTDIR\${PRODUCT_NAME}.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\${PRODUCT_NAME}.lnk" "${PRODUCT_INSTDIR_EXE}"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk" "$INSTDIR\${PRODUCT_UNINSTALL_EXE}"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Website.lnk" "$INSTDIR\${PRODUCT_NAME}.url"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Help.lnk" "$INSTDIR\abschs.chm"
 
  # App Version
  WriteRegStr ${PRODUCT_CURRENT_USER_ROOT_KEY} "${REG_TEST_REPORT_KEY}" "${REG_SOFT_VERSION}" "${PRODUCT_VERSION}"
  
  # Create Desktop Shortcut
  ${UI_PLUGIN_NAME}::IsCreateDesktopShortcutExe /NOUNLOAD
  Pop $0
  ${If} $0 == 1
	CreateShortCut "$DESKTOP\${PRODUCT_NAME}.lnk" "${PRODUCT_INSTDIR_EXE}"
  ${EndIf}
  
  # Auto Startup On Boot
  ${UI_PLUGIN_NAME}::IsBootExe /NOUNLOAD
  Pop $0
  ${If} $0 == 1
  	WriteRegStr ${PRODUCT_CURRENT_USER_ROOT_KEY} "${PRODUCT_CURRENT_BOOT_DIR_KEY}" "${PRODUCT_EXE_NAME}" "${PRODUCT_INSTDIR_EXE}"
  ${EndIf}
  
  
  # Set Language type
  ${UI_PLUGIN_NAME}::GetLanguageType /NOUNLOAD
  Pop $0
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "${REG_STR_LANGUAGE}" $0
	
  # Start run Exe
  ${UI_PLUGIN_NAME}::IsRunExe /NOUNLOAD
  Pop $0
  ${If} $0 == 1
	Exec '"${PRODUCT_INSTDIR_EXE}"'
  ${EndIf}

  
FunctionEnd

Function onCreateUninstall

  WriteUninstaller "$INSTDIR\${PRODUCT_UNINSTALL_EXE}"
  
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_DIR_REGKEY}" "" "${PRODUCT_INSTDIR_EXE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "${PRODUCT_NAME}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\${PRODUCT_UNINSTALL_EXE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "${PRODUCT_INSTDIR_EXE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "InstallPath" "$INSTDIR"
  
FunctionEnd

Function onUnstallExistProduct

	# Old Product Install Path
	ReadRegStr $0 ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "InstallPath"
	Pop $0
	
	# If not exist
	StrCmp $0 "" UnstallFinished
	
	# Copy license files to templete directory
	CreateDirectory "${LICENSE_FILE_TEMP_DIR}"
	# CopyFiles /SILENT "$0\${CONFIG_FILE_NAME}" "${LICENSE_FILE_TEMP_DIR}\${CONFIG_FILE_NAME}"
	Sleep 200
	
	# Delete directory
	${UI_PLUGIN_NAME}::SetInstallStepDescription "UNSTALL_OLD_PRODUCT" 101
	RMDir /r $0

	${UI_PLUGIN_NAME}::SetInstallStepDescription "UNSTALL_OLD_PRODUCT" 102
	# Delete StartMenu ShortCut
	Delete "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk"
	Delete "$SMPROGRAMS\${PRODUCT_NAME}\Website.lnk"
	Delete "$SMPROGRAMS\${PRODUCT_NAME}\${PRODUCT_NAME}.lnk"
	Delete "$SMPROGRAMS\${PRODUCT_NAME}\Help.lnk"
	RMDir /r "$SMPROGRAMS\${PRODUCT_NAME}"
	
	# Delete DeskTop ShortCut
	Delete "$DESKTOP\${PRODUCT_NAME}.lnk"
	
	${UI_PLUGIN_NAME}::SetInstallStepDescription "UNSTALL_OLD_PRODUCT" 103
	# Delete Regedit Uninstall Info
	DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
	DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_DIR_REGKEY}"
	
	# Delete Regedit Startup On Boot
	DeleteRegValue ${PRODUCT_CURRENT_USER_ROOT_KEY} "${PRODUCT_CURRENT_BOOT_DIR_KEY}" "${PRODUCT_EXE_NAME}"
	
	Sleep 300
	
UnstallFinished:

FunctionEnd

Function un.PageAppUnInstall

	GetFunctionAddress $0 un.OnStartDeleteFiles

	${UI_PLUGIN_NAME}::BindEventToNsisFunc /NOUNLOAD "UN_START_DELETE_FILES" $0

	GetFunctionAddress $0 un.OnUserCancelInstall

	${UI_PLUGIN_NAME}::BindEventToNsisFunc /NOUNLOAD "UN_USER_CANCEL" $0
	
	GetFunctionAddress $0 un.OnBeforeFinished

	${UI_PLUGIN_NAME}::BindEventToNsisFunc /NOUNLOAD "UN_BEFORE_FINISHED" $0
	
	;Initialize the name version and the path where the app is located
	${UI_PLUGIN_NAME}::UnInitUninstallPluginHelper /NOUNLOAD ${PRODUCT_NAME} ${PRODUCT_VERSION} ${PRODUCT_EXE_NAME} ${PRODUCT_ALIAS_NAME}
	
	# ReadRegStr $0 ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Language"
	
	;Display the page, need to pass the $PLUGINSDIR parameter to the qt app path
	# ${UI_PLUGIN_NAME}::UnShowUninstallWindow /NOUNLOAD $PLUGINSDIR $0
	${UI_PLUGIN_NAME}::UnShowUninstallWindow /NOUNLOAD $PLUGINSDIR "-1"
	
FunctionEnd

Section "Uninstall"

  
SectionEnd

# Before Uninstall

Function un.onInit
	
	InitPluginsDir

	SetOutPath "$PLUGINSDIR"
	
	File /r ${PACKAGE_PATH}\*.*
	
	File /r ${SYSTEM_DLL_PATH}\*.*
	
FunctionEnd


Function un.onUninstSuccess

	${UI_PLUGIN_NAME}::FinalCall
	RMDir /r /REBOOTOK "$PLUGINSDIR"
	
FunctionEnd

Function un.onUninstFailed

	${UI_PLUGIN_NAME}::FinalCall
	RMDir /r /REBOOTOK "$PLUGINSDIR"
	
FunctionEnd

Function un.onUserAbort

	${UI_PLUGIN_NAME}::FinalCall
	RMDir /r /REBOOTOK "$PLUGINSDIR"
	
FunctionEnd

Function un.OnStartDeleteFiles

	# Copy license files to templete directory
	CreateDirectory "${LICENSE_FILE_TEMP_DIR}"
	# CopyFiles /SILENT "$INSTDIR\${CONFIG_FILE_NAME}" "${LICENSE_FILE_TEMP_DIR}\${CONFIG_FILE_NAME}"
	Sleep 200
	
	GetFunctionAddress $0 un.onDeleteFiles
    ${UI_PLUGIN_NAME}::NewThreadRun /NOUNLOAD $0

FunctionEnd

Function un.onDeleteFiles
	
	Delete "$INSTDIR\${PRODUCT_NAME}.url"
	Delete "$INSTDIR\${PRODUCT_UNINSTALL_EXE}"
	RMDir /r "$INSTDIR"
	
	Call un.OnAfterExtractFiles
	
FunctionEnd

Function un.OnAfterExtractFiles

	${UI_PLUGIN_NAME}::UnNsisDeleteFilesFinished /NOUNLOAD

	Call un.onDeleteUninstall
	
FunctionEnd

Function un.onDeleteUninstall

  # Delete StartMenu ShortCut
  Delete "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk"
  Delete "$SMPROGRAMS\${PRODUCT_NAME}\Website.lnk"
  Delete "$SMPROGRAMS\${PRODUCT_NAME}\${PRODUCT_NAME}.lnk"
  Delete "$SMPROGRAMS\${PRODUCT_NAME}\Help.lnk"
  RMDir /r "$SMPROGRAMS\${PRODUCT_NAME}"
  
  # Delete DeskTop ShortCut
  Delete "$DESKTOP\${PRODUCT_NAME}.lnk"
  
FunctionEnd

Function un.OnUserCancelInstall
	Abort
FunctionEnd

Function un.OnBeforeFinished

  # Delete Regedit Uninstall Info
  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_DIR_REGKEY}"
  
  # Delete Regedit Startup On Boot
  DeleteRegValue ${PRODUCT_CURRENT_USER_ROOT_KEY} "${PRODUCT_CURRENT_BOOT_DIR_KEY}" "${PRODUCT_EXE_NAME}"
  
  ;RMDir /r "$PLUGINSDIR"
FunctionEnd